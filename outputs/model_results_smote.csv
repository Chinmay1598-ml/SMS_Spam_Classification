Model,Accuracy,Precision,Recall,F1 Score,Best Hyperparameters
"Logistic Regression (Baseline, smote)",0.97847533632287,0.9139072847682119,0.9261744966442953,0.92,
"Logistic Regression (Tuned, smote)",0.97847533632287,0.9084967320261438,0.9328859060402684,0.9205298013245033,"{'clf__C': 10, 'clf__solver': 'liblinear'}"
"SVM (Baseline, smote)",0.9641255605381166,0.8811188811188811,0.8456375838926175,0.863013698630137,
"SVM (Tuned, smote)",0.9820627802690582,0.9387755102040817,0.9261744966442953,0.9324324324324325,"{'clf__C': 1, 'clf__kernel': 'linear'}"
"Random Forest (Baseline, smote)",0.9811659192825112,1.0,0.8590604026845637,0.924187725631769,
"Random Forest (Tuned, smote)",0.9802690582959641,0.9922480620155039,0.8590604026845637,0.920863309352518,"{'clf__max_depth': None, 'clf__min_samples_split': 5, 'clf__n_estimators': 200}"
"KNN (Baseline, smote)",0.6349775784753363,0.2645985401459854,0.9731543624161074,0.41606886657101866,
"KNN (Tuned, smote)",0.7022421524663677,0.30655391120507397,0.9731543624161074,0.4662379421221865,"{'clf__n_neighbors': 7, 'clf__weights': 'distance'}"
"XGBoost (Baseline, smote)",0.9713004484304932,0.9465648854961832,0.8322147651006712,0.8857142857142857,
"XGBoost (Tuned, smote)",0.9695067264573991,0.9323308270676691,0.8322147651006712,0.8794326241134752,"{'clf__learning_rate': 0.2, 'clf__n_estimators': 200}"
